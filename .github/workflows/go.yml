# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20.1'
        
    - name: Install dependencies
      run: go get .

    - name: Get Set
      env: 
          flag:  -trimpath -ldflags "-s -w" 
      run: |
          go env -w GO111MODULE=on
      
    - name: Build LINUX
      run: |
        env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build ${{env.flag}} -o AutoDomain_linux_amd64 main.go
        env CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build ${{env.flag}} -o AutoDomain_linux_arm64 main.go

    - name: Build WINDOWS
      run: |
        env CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build ${{env.flag}} -o AutoDomain_windows_amd64.exe main.go
        env CGO_ENABLED=0 GOOS=windows GOARCH=386 go build ${{env.flag}} -o AutoDomain_windows_386.exe main.go

    - name: Create Zip Archive
      run: |
        zip AutoDomain_linux_amd64.zip AutoDomain_linux_amd64 config
        zip AutoDomain_linux_arm64.zip AutoDomain_linux_arm64 config
        zip AutoDomain_windows_amd64.zip AutoDomain_windows_amd64.exe config
        zip AutoDomain_windows_386.zip AutoDomain_windows_386.exe config
